#version 460
in vec2 tex_coord_smile;
in vec2 tex_coord_quads;
in vec2 tex_coord_earth;
in vec3 frag_position;
in vec3 frag_normal;

layout (binding = 0) uniform sampler2D InTexture_Smile;
layout (binding = 1) uniform sampler2D InTexture_Quads;
layout (binding = 2) uniform sampler2D InTexture_Earth;

uniform vec3 camera_position;
uniform vec3 light_position;
uniform vec3 light_color;
uniform float ambient_factor;
uniform float diffuse_factor;
uniform float specular_factor;
uniform float shininess;

out vec4 frag_color;

void main() {
	// ambient
	vec3 ambient = ambient_factor * light_color;
	
	// diffuse
	vec3 normal = normalize(frag_normal);
	float light_magnitude = length(light_position - frag_position);
	vec3 light_dir = normalize(light_position - frag_position);
	vec3 diffuse = diffuse_factor * light_color * max(dot(normal, light_dir), 0.0);
	
	// specular
	vec3 view_dir = normalize(camera_position - frag_position);
	vec3 reflect_dir = reflect(-light_dir, normal);
	float specular_value = pow(max(dot(view_dir, reflect_dir), 0.0), shininess);
	vec3 specular = specular_factor * specular_value * light_color;
	
	//frag_color = texture(InTexture_Smile, tex_coord_smile) * texture(InTexture_Quads, tex_coord_quads);
	frag_color = texture(InTexture_Earth, tex_coord_earth) * vec4((ambient + diffuse + specular) / light_magnitude, 1.f);
}